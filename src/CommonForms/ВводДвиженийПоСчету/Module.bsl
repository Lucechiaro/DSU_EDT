
&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВыписку(Команда)
	
	ПараметрыФормы = Новый Структура("Счет", Счет);
	ОткрытьФорму("ОбщаяФорма.ЗагрузкаВыпискиБанка", ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НачалоПериода = НачалоНедели(ТекущаяДата());
	ОкончаниеПериода = КонецНедели(ТекущаяДата());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	БанковскаяТранзакция.Дата,
	|	БанковскаяТранзакция.Ссылка,
	|	БанковскаяТранзакция.Валюта,
	|	БанковскаяТранзакция.ВидДвижения,
	|	БанковскаяТранзакция.Содержание,
	|	БанковскаяТранзакция.Сумма
	|ПОМЕСТИТЬ Транзакции
	|ИЗ
	|	Документ.БанковскаяТранзакция КАК БанковскаяТранзакция
	|ГДЕ
	|	БанковскаяТранзакция.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И БанковскаяТранзакция.Счет = &Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходДенежныхСредств.Дата,
	|	РасходДенежныхСредств.ПометкаУдаления,
	|	РасходДенежныхСредств.Проведен,
	|	РасходДенежныхСредств.Ссылка,
	|	РасходДенежныхСредств.СтатьяДДС,
	|	РасходДенежныхСредств.Валюта,
	|	РасходДенежныхСредств.Сумма,
	|	РасходДенежныхСредств.Курс,
	|	РасходДенежныхСредств.Кратность,
	|	РасходДенежныхСредств.Комментарий,
	|	РасходДенежныхСредств.БанковскаяТранзакция,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияДС.Расход) Как ВидДвижения
	|Поместить СуществующиеДокументы
	|ИЗ
	|	Документ.РасходДенежныхСредств КАК РасходДенежныхСредств
	|ГДЕ
	|	РасходДенежныхСредств.Счет = &Счет
	|	И РасходДенежныхСредств.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Не РасходДенежныхСредств.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходДенежныхСредств.Дата,
	|	ПриходДенежныхСредств.ПометкаУдаления,
	|	ПриходДенежныхСредств.Проведен,
	|	ПриходДенежныхСредств.Ссылка,
	|	ПриходДенежныхСредств.СтатьяДДС,
	|	ПриходДенежныхСредств.Валюта,
	|	ПриходДенежныхСредств.Сумма,
	|	ПриходДенежныхСредств.Курс,
	|	ПриходДенежныхСредств.Кратность,
	|	ПриходДенежныхСредств.Комментарий,
	|	ПриходДенежныхСредств.БанковскаяТранзакция,
	|	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияДС.Доход)
	|ИЗ
	|	Документ.ПриходДенежныхСредств КАК ПриходДенежныхСредств
	|ГДЕ
	|	ПриходДенежныхСредств.Счет = &Счет
	|	И ПриходДенежныхСредств.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Не ПриходДенежныхСредств.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Транзакции.Дата,
	|	Ложь Как ПометкаУдаления,
	|	Ложь Как Проведен,
	|	Неопределено Как Документ,
	|	Неопределено Как СтатьяДДС,
	|	Транзакции.Валюта Как Валюта,
	|	Транзакции.Сумма Как Сумма,
	|	1 Как Курс,
	|	1 Как Кратность,
	|	Транзакции.Содержание Как Комментарий,
	|	Транзакции.Ссылка Как БанковскаяТранзакция,
	|	Транзакции.ВидДвижения,
	|	Транзакции.Дата Как ДатаТранзакции
	|ИЗ
	|	Транзакции КАК Транзакции
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуществующиеДокументы КАК СуществующиеДокументы
	|		ПО Транзакции.Ссылка = СуществующиеДокументы.БанковскаяТранзакция
	|ГДЕ
	|	СуществующиеДокументы.Ссылка ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СуществующиеДокументы.Дата,
	|	СуществующиеДокументы.ПометкаУдаления,
	|	СуществующиеДокументы.Проведен,
	|	СуществующиеДокументы.Ссылка,
	|	СуществующиеДокументы.СтатьяДДС,
	|	СуществующиеДокументы.Валюта,
	|	СуществующиеДокументы.Сумма,
	|	СуществующиеДокументы.Курс,
	|	СуществующиеДокументы.Кратность,
	|	СуществующиеДокументы.Комментарий,
	|	СуществующиеДокументы.БанковскаяТранзакция,
	|	СуществующиеДокументы.ВидДвижения,
	|	ЕстьNull(Транзакции.Дата, СуществующиеДокументы.Дата)
	|ИЗ
	|	СуществующиеДокументы КАК СуществующиеДокументы
	|		ЛЕВОЕ соединение Транзакции
	|		По СуществующиеДокументы.БанковскаяТранзакция = Транзакции.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаТранзакции";
	Запрос.УстановитьПараметр("Счет", 				Счет);
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", 	ОкончаниеПериода);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДеревоДокументов.ПолучитьЭлементы().Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		Ветвь = ДеревоДокументов.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(Ветвь, Выборка, , "Проведен");
		
		Если ЗначениеЗаполнено(Выборка.Документ) И Выборка.Проведен Тогда
			Ветвь.Проведен = Истина;
		КонецЕсли;	
		
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДокументовПроведенПриИзменении(Элемент)
	
	Если Не ДанныеСтрокиЗаполненыКорректно(Элементы.ДеревоДокументов.ТекущиеДанные) Тогда
		Возврат;
	КонецЕсли;	
	
	ПриИзмененииСтрокиНаСервере(Элементы.ДеревоДокументов.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Функция ДанныеСтрокиЗаполненыКорректно(ДанныеСтроки)
	
	ДанныеЗаполненыКорректно = Истина;
	
	Если Не ЗначениеЗаполнено(ДанныеСтроки.СтатьяДДС) Тогда
		
		Сообщить("Укажите статью!");
		ДанныеЗаполненыКорректно = Ложь;
				
	КонецЕсли;	
	
	Возврат ДанныеЗаполненыКорректно; 
	
КонецФункции	

&НаСервере
Процедура ПриИзмененииСтрокиНаСервере(ТекущаяСтрокаДерева)
	
	ТекущиеДанные = ДеревоДокументов.НайтиПоИдентификатору(ТекущаяСтрокаДерева);
	
	Если ТекущиеДанные.Проведен Тогда
		СоздатьОбновитьДокумент(ТекущиеДанные);
	Иначе
		УдалитьДокумент(ТекущиеДанные);	
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура СоздатьОбновитьДокумент(ТекущиеДанные)
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда
		ДокументОбъект = ПолучитьНовыйДокумент(ТекущиеДанные);
	Иначе	
		ДокументОбъект = ТекущиеДанные.Документ.ПолучитьОбъект();
	КонецЕсли;	
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ТекущиеДанные);
	ДокументОбъект.Дата = ТекущиеДанные.ДатаТранзакции;
	ДокументОбъект.Счет = Счет; 
	
	Попытка
		
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
		ТекущиеДанные.Документ = ДокументОбъект.Ссылка;
		
	Исключение
		
		ТекущиеДанные.Проведен = Ложь;
		Сообщить(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДокумент(ТекущиеДанные)
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда
		
		ДокументОбъект = ТекущиеДанные.Документ.ПолучитьОбъект();
		ДокументОбъект.УстановитьПометкуУдаления(Истина);
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьНовыйДокумент(ДанныеДокумента)
	
	Если ДанныеДокумента.ВидДвижения = ПредопределенноеЗначение("Перечисление.ВидДвиженияДС.Доход") Тогда
		Возврат Документы.ПриходДенежныхСредств.СоздатьДокумент();
	Иначе
		Возврат Документы.РасходДенежныхСредств.СоздатьДокумент();
	КонецЕсли;		
	
КонецФункции	
	
