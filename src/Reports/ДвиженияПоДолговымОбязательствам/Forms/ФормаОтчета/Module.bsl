
&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	// заполним параметры: период и долговое обязательство
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Должник", Должник);
	ПараметрыОтчета.Вставить("Валюта", Валюта);
	ПараметрыОтчета.Вставить("ВалютаНеЗаполнена", Не ЗначениеЗаполнено(Валюта));
	ПараметрыОтчета.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода", КонецПериода);
	
	ОбработатьРасшифровку(Результат, ПараметрыОтчета);
	
КонецПроцедуры

Процедура ОбработатьРасшифровку(ТабличныйДокумент, ПараметрыОтчета) Экспорт
	
	ТабличныйДокумент.Очистить();
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СхемаКомпоновкиДанных = ОтчетОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	ИсполняемыеНастройки = ОтчетОбъект.КомпоновщикНастроек.Настройки;
	ОбщийКлиентСервер.УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "Должник", ПараметрыОтчета.Должник);
	ОбщийКлиентСервер.УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "НачалоПериода", ПараметрыОтчета.НачалоПериода);
	ОбщийКлиентСервер.УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "КонецПериода", ПараметрыОтчета.КонецПериода);
	ОбщийКлиентСервер.УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "Валюта", ПараметрыОтчета.Валюта);
	ОбщийКлиентСервер.УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "ВалютаНеЗаполнена", ПараметрыОтчета.ВалютаНеЗаполнена);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ПараметрыОтчета);
	
	ДанныеРасшифровкиСКД = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, ИсполняемыеНастройки, ДанныеРасшифровкиСКД);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровкиСКД);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровкиСКД, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;      
	СтруктураРасшифровки = ОбщегоНазначенияСервер.ПолучитьСтруктуру(Расшифровка, ЭтаФорма.ДанныеРасшифровки);
	
	Если СтруктураРасшифровки.Свойство("Регистратор") Тогда
		ОткрытьЗначениеАсинх(СтруктураРасшифровки.Регистратор);
	КонецЕсли;	
	
КонецПроцедуры
